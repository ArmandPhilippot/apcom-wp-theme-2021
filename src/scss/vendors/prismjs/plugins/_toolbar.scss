@use "../../../abstracts/functions" as fun;
@use "../../../abstracts/mixins" as mix;
@use "../../../abstracts/variables" as var;
@use "../../../components/button";

.code-toolbar {
	position: relative;
	margin-top: fun.convert-px(70); // toolbar height
	width: 100%;

	> .toolbar {
		display: flex;
		flex-flow: row wrap;
		align-content: center;
		justify-content: flex-end;
		gap: fun.get-var(spacing-sm);
		background: fun.get-var(color-bg-tertiary);
		border: solid fun.get-var(color-border-light);
		border-width: fun.convert-px(1) fun.convert-px(1) 0 fun.convert-px(1);
		border-top-left-radius: fun.convert-px(3);
		border-top-right-radius: fun.convert-px(3);
		box-shadow: 0 fun.convert-px(2) fun.convert-px(3) fun.convert-px(-2)
			fun.get-var(color-shadow-darker);
		width: 100%;
		height: fun.convert-px(70);
		margin: 0;
		position: absolute;
		top: fun.convert-px(-70);
		left: 0;
	}

	.toolbar-item {
		display: flex;
		align-items: center;
		color: fun.get-var(color-fg-secondary);

		&:first-child {
			font-size: fun.get-var(font-size-md);
			font-weight: 600;
			margin-right: auto;
			margin-left: fun.get-var(spacing-sm);
		}

		&:last-child {
			margin-right: fun.get-var(spacing-sm);
		}
	}

	.copy-to-clipboard-button {
		@extend .btn;
		@extend .btn--round;
		color: fun.get-var(color-fg-inverted);
		font-size: fun.get-var(font-size-sm);
		height: var.get-dim(icon-size-xl);
		padding: 0 fun.get-var(spacing-xs);
	}

	.prism__btn {
		width: var.get-dim(icon-size-xl);
		height: var.get-dim(icon-size-xl);
	}

	pre {
		border-top-left-radius: 0;
		border-top-right-radius: 0;
		width: auto;
	}

	@include mix.pointer("fine") {
		margin-top: fun.convert-px(52);

		> .toolbar {
			height: fun.convert-px(52);
			top: fun.convert-px(-52);
		}

		.toolbar-item {
			&:first-child {
				font-size: fun.get-var(font-size-sm);
			}
		}

		.copy-to-clipboard-button {
			height: var.get-dim(icon-size-lg);
		}

		.prism__btn {
			width: var.get-dim(icon-size-lg);
			height: var.get-dim(icon-size-lg);
		}
	}
}
