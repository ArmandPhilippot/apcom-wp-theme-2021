form {
	position: relative;
}

form,
button,
input,
optgroup,
select,
textarea {
	max-width: 100%;
}

button,
input[type="submit"] {
	@include buttonBase;
}

label {
	display: block;
	cursor: pointer;
	color: cssvar(color-fg-secondary);
	font-size: cssvar(font-size-sm);
	text-transform: uppercase;
}

input[type="text"],
input[type="email"],
input[type="url"],
input[type="password"],
input[type="search"],
input[type="number"],
input[type="tel"],
input[type="range"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="color"],
textarea {
	background: cssvar(color-bg-tertiary);
	border: pxtorem(1) solid cssvar(color-border);
	box-shadow: pxtorem(4) pxtorem(4) 0 0 cssvar(color-shadow);
	color: cssvar(color-fg);
	padding: cssvar(spacing-sm);
	width: 100%;
	transition: all 0.2s ease-in 0s;

	&:hover {
		box-shadow: pxtorem(7) pxtorem(7) 0 0 cssvar(color-shadow);
		transform: translateX(#{pxtorem(-3)}) translateY(#{pxtorem(-3)});
	}

	&:focus {
		background: cssvar(color-bg);
		box-shadow: pxtorem(2) pxtorem(2) 0 0 cssvar(color-primary-light);
		outline: none;
		transform: translateX(#{pxtorem(2)}) translateY(#{pxtorem(2)});
	}

	&::placeholder {
		color: cssvar(color-fg-tertiary);
	}
}

input[type="checkbox"]:not(.toggle) {
	position: absolute;
	left: 0;
	opacity: 0.01;

	+ label {
		position: relative;
		padding-left: cssvar(spacing-md);
		cursor: pointer;
	}

	&:not(:checked),
	&:checked {
		+ label {
			&::before {
				content: "";
				position: absolute;
				left: 0;
				top: pxtorem(-2);
				width: pxtorem(20);
				height: pxtorem(20);
				background: cssvar(color-bg-tertiary);
				border-radius: pxtorem(3);
				border: pxtorem(1) solid cssvar(color-border);
				box-shadow: pxtorem(2) pxtorem(2) 0 0 cssvar(color-shadow);
				transition: all 0.3s ease-in-out 0s;
			}

			&::after {
				content: "\2715";
				speak: never;
				position: absolute;
				top: pxtorem(8);
				left: pxtorem(2);
				font-size: cssvar(font-size-lg);
				color: cssvar(color-primary);
				line-height: 0;
				transition: all 0.3s ease-in-out 0s;
			}
		}

		&:hover {
			+ label {
				&::before {
					box-shadow: pxtorem(4) pxtorem(4) 0 0 cssvar(color-shadow);
					transform: translateX(#{pxtorem(-2)})
						translateY(#{pxtorem(-2)});
				}
			}
		}

		&:focus {
			+ label {
				&::before {
					background: cssvar(color-bg);
					box-shadow: 0 0 0 pxtorem(4)
							cssvar(color-primary-light-opacity),
						pxtorem(1) pxtorem(1) 0 0 cssvar(color-shadow);
					transform: translateX(#{pxtorem(1)})
						translateY(#{pxtorem(1)});
				}
			}
		}
	}

	&:not(:checked) {
		+ label {
			&::after {
				opacity: 0;
				transform: scale(0);
			}
		}
	}

	&:checked {
		+ label {
			&::after {
				opacity: 1;
				transform: scale(1);
			}
		}

		&:focus {
			+ label {
				&::after {
					top: pxtorem(9);
					left: pxtorem(3);
				}
			}
		}

		&:hover:not(:focus) {
			+ label {
				&::after {
					top: pxtorem(6);
					left: pxtorem(-1);
				}
			}
		}
	}
}

select {
	appearance: none;
	background-color: cssvar(color-bg-tertiary);
	background-image: url(encodesvg(
		'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 22"><path d="M3.707 7L3 7.707l6.125 6.125L11 15.707l1.875-1.875L19 7.707 18.293 7l-6.125 6.125L11 14.293l-1.168-1.168L3.707 7" fill="#{$color_chathams-blue-dark}"/></svg>'
	));
	background-position: calc(100% - #{cssvar(spacing-sm)}) center;
	background-repeat: no-repeat;
	background-size: pxtorem(24);
	border: pxtorem(1) solid cssvar(color-border);
	box-shadow: pxtorem(4) pxtorem(4) 0 0 cssvar(color-shadow);
	color: cssvar(color-fg);
	cursor: pointer;
	padding: cssvar(spacing-sm);
	width: 100%;
	transition: all 0.3s ease-in-out 0s;

	&:hover {
		box-shadow: pxtorem(6) pxtorem(6) 0 0 cssvar(color-shadow);
		transform: translateX(#{pxtorem(-2)}) translateY(#{pxtorem(-2)});
	}

	&:focus {
		background-color: cssvar(color-bg);
		box-shadow: pxtorem(1) pxtorem(1) 0 pxtorem(5)
				cssvar(color-primary-light-opacity),
			pxtorem(2) pxtorem(2) 0 0 cssvar(color-shadow);
		outline: none;
		transform: translateX(#{pxtorem(2)}) translateY(#{pxtorem(2)});
	}
}

[data-color-scheme="dark"] {
	select {
		background-image: url(encodesvg(
			'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 22"><path d="M3.707 7L3 7.707l6.125 6.125L11 15.707l1.875-1.875L19 7.707 18.293 7l-6.125 6.125L11 14.293l-1.168-1.168L3.707 7" fill="#{$color_spindle-dark}"/></svg>'
		));
	}
}

option {
	&:hover {
		background: cssvar(color-bg-secondary);
	}
}
