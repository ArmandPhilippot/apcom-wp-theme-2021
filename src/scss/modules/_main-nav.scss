@use "../abstracts/functions" as f;
@use "../abstracts/mixins" as m;

.main-nav {
	background: f.cssvar(color-primary);
	box-shadow: 0 f.pxtorem(-2) f.pxtorem(2) 0 f.cssvar(color-shadow-darker);
	position: fixed;
	bottom: 0;
	left: 0;
	right: 0;
	z-index: 3;

	@include m.media("screen") {
		@include m.dimensions("lg") {
			position: relative;
			bottom: auto;
			left: auto;
			width: max-content;
			margin: 0;
			background: none;
			box-shadow: none;
			z-index: 2;
		}
	}

	&__list {
		@include m.flexList;
		flex-flow: row nowrap;
		overflow-y: auto;

		@include m.media("screen") {
			@include m.dimensions("sm") {
				gap: f.cssvar(spacing-sm);
				overflow: initial;
				padding: 0 f.cssvar(spacing-md);
			}

			@include m.dimensions("lg") {
				gap: f.cssvar(spacing-2xs);
				overflow: initial;
				padding: 0;
			}

			@include m.dimensions("xl") {
				gap: unset;
			}
		}
	}

	&__item,
	&__list--page-menu li {
		flex: 0 0 auto;
		display: flex;
		flex-flow: row nowrap;
	}

	&__link,
	&__list--page-menu a {
		display: flex;
		flex-flow: row wrap;
		align-items: center;
		background: linear-gradient(
					to top,
					f.cssvar(color-bg) f.pxtorem(3),
					transparent f.pxtorem(3)
				)
				center / 0 100% no-repeat,
			linear-gradient(
					to bottom,
					transparent 0 25%,
					f.cssvar(color-primary) 25% 50%,
					f.cssvar(color-primary-light) 50% 75%,
					f.cssvar(color-primary-dark) 75% 100%
				)
				0 33.3% / 100% 400% no-repeat,
			linear-gradient(
					to bottom,
					f.cssvar(color-bg) 0 50%,
					transparent 50% 100%
				)
				0 100% / 100% 200% no-repeat;
		color: f.cssvar(color-fg-inverted);
		font-size: f.cssvar(font-size-lg);
		font-variant: small-caps;
		font-weight: 600;
		text-decoration: none;
		height: f.pxtorem(60);
		padding: 0 f.cssvar(spacing-sm);

		&:hover {
			background-position: center, 0 66.6%, 0 100%;
			color: f.cssvar(color-fg-inverted);
		}

		&:focus {
			background-position: center, 0 0, 0 0;
			color: f.cssvar(color-primary);
		}

		&:active {
			background-position: center, 0 100%, 0 100%;
			color: f.cssvar(color-fg-inverted);
		}

		@include m.media("screen") {
			@include m.dimensions("sm") {
				height: f.pxtorem(70);
			}

			@include m.dimensions("lg") {
				background-image: linear-gradient(
						to right,
						transparent,
						transparent
					),
					linear-gradient(to bottom, transparent, transparent),
					linear-gradient(to left, transparent, transparent),
					linear-gradient(to top, transparent, transparent);
				background-position: top left, top right, bottom right,
					bottom left;
				background-size: 0 f.cssvar(draw-border-width),
					f.cssvar(draw-border-width) 0, 0 f.cssvar(draw-border-width),
					f.cssvar(draw-border-width) 0;
				background-color: transparent;
				background-repeat: no-repeat;
				border-radius: 8%;
				color: f.cssvar(color-primary);
				height: auto;
				margin: 0 f.pxtorem(3);
				padding: f.cssvar(spacing-3xs) f.cssvar(spacing-sm);
				transform: skew(-20deg);
				transition: all 0.3s linear 0s;

				&:hover,
				&:focus {
					background-image: linear-gradient(
							to right,
							f.cssvar(color-primary-light),
							f.cssvar(color-primary-light)
						),
						linear-gradient(
							to bottom,
							f.cssvar(color-primary-light),
							f.cssvar(color-primary-light)
						),
						linear-gradient(
							to left,
							f.cssvar(color-primary-light),
							f.cssvar(color-primary-light)
						),
						linear-gradient(
							to top,
							f.cssvar(color-primary-light),
							f.cssvar(color-primary-light)
						);
					background-position: top left, top right, bottom right,
						bottom left;
					background-size: 100% f.cssvar(draw-border-width),
						f.cssvar(draw-border-width) 100%,
						100% f.cssvar(draw-border-width),
						f.cssvar(draw-border-width) 100%;
					color: f.cssvar(color-primary-light);
					animation: drawBorders 1s linear 1 0s;
				}

				&:active {
					background-image: linear-gradient(
							to right,
							f.cssvar(color-primary-dark),
							f.cssvar(color-primary-dark)
						),
						linear-gradient(
							to bottom,
							f.cssvar(color-primary-dark),
							f.cssvar(color-primary-dark)
						),
						linear-gradient(
							to left,
							f.cssvar(color-primary-dark),
							f.cssvar(color-primary-dark)
						),
						linear-gradient(
							to top,
							f.cssvar(color-primary-dark),
							f.cssvar(color-primary-dark)
						);
					background-position: top left, top right, bottom right,
						bottom left;
					background-size: 0 f.cssvar(draw-border-width),
						f.cssvar(draw-border-width) 0,
						0 f.cssvar(draw-border-width),
						f.cssvar(draw-border-width) 0;
					color: f.cssvar(color-primary-dark);
				}

				span {
					transform: skew(20deg);
				}
			}
		}
	}

	/* stylelint-disable-next-line -- WP native class. */
	.current_page_item {
		.main-nav__link {
			background-size: 50% 100%, 100% 400%, 100% 200%;

			@include m.media("screen") {
				@include m.dimensions("lg") {
					background-image: linear-gradient(
							to right,
							transparent,
							transparent
						),
						linear-gradient(to bottom, transparent, transparent),
						linear-gradient(
							to left,
							f.cssvar(color-primary-light),
							f.cssvar(color-primary-light)
						),
						linear-gradient(to top, transparent, transparent);
					background-position: top left, top right, bottom right 25%,
						bottom left;
					background-size: 0 f.cssvar(draw-border-width),
						f.cssvar(draw-border-width) 0,
						70% f.cssvar(draw-border-width),
						f.cssvar(draw-border-width) 0;

					&:hover,
					&:focus {
						background-image: linear-gradient(
								to right,
								f.cssvar(color-primary-light),
								f.cssvar(color-primary-light)
							),
							linear-gradient(
								to bottom,
								f.cssvar(color-primary-light),
								f.cssvar(color-primary-light)
							),
							linear-gradient(
								to left,
								f.cssvar(color-primary-light),
								f.cssvar(color-primary-light)
							),
							linear-gradient(
								to top,
								f.cssvar(color-primary-light),
								f.cssvar(color-primary-light)
							);
						background-size: 100% f.cssvar(draw-border-width),
							f.cssvar(draw-border-width) 100%,
							100% f.cssvar(draw-border-width),
							f.cssvar(draw-border-width) 100%;
					}

					&:active {
						background-image: linear-gradient(
								to right,
								f.cssvar(color-primary-light),
								f.cssvar(color-primary-light)
							),
							linear-gradient(
								to bottom,
								f.cssvar(color-primary-light),
								f.cssvar(color-primary-light)
							),
							linear-gradient(
								to left,
								f.cssvar(color-primary-light),
								f.cssvar(color-primary-light)
							),
							linear-gradient(
								to top,
								f.cssvar(color-primary-light),
								f.cssvar(color-primary-light)
							);
						background-size: 0 f.cssvar(draw-border-width),
							f.cssvar(draw-border-width) 0,
							0 f.cssvar(draw-border-width),
							f.cssvar(draw-border-width) 0;
					}
				}
			}
		}
	}
}
