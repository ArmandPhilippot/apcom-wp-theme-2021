@use "../functions" as f;

@mixin buttonBase {
	display: inline-flex;
	align-items: center;
	justify-content: space-between;
	width: auto;
	cursor: pointer;
	font-weight: 600;
	text-decoration: none;
	transition: all 0.3s ease-in-out 0s;

	&:focus {
		outline: none;
	}
}

@mixin buttonStyle1 {
	display: flex;
	background: linear-gradient(
			to left,
			f.cssvar(color-primary) 0 33.3%,
			f.cssvar(color-primary-light) 33.3% 66.6%,
			f.cssvar(color-primary-dark) 66.6% 100%
		)
		100% 0 / 300% 100% no-repeat;
	border: none;
	border-radius: f.pxtorem(6);
	color: f.cssvar(color-fg-inverted);
	font-variant: small-caps;
	box-shadow: 0 0 0 f.pxtorem(2) f.cssvar(color-primary),
		f.pxtorem(2) f.pxtorem(2) 0 f.pxtorem(2) f.cssvar(color-shadow),
		f.pxtorem(3) f.pxtorem(3) f.pxtorem(3) f.pxtorem(2)
			f.cssvar(color-shadow-darker),
		inset 0 0 0 f.pxtorem(2) f.cssvar(color-shadow-lighter),
		inset 0 f.pxtorem(-10) f.pxtorem(16) f.pxtorem(6) rgba(0, 0, 0, 0.13),
		inset 0 f.pxtorem(9) f.pxtorem(32) f.pxtorem(4)
			rgba(255, 255, 255, 0.13);
	padding: f.pxtorem(20) f.cssvar(spacing-md);
	transform: skewX(-15deg);

	&:hover,
	&:focus {
		background-position: 50% 0;
		padding: f.pxtorem(20) calc(#{f.cssvar(spacing-md)} + #{f.pxtorem(4)});
		transform: skewX(0deg);

		span {
			transform: skewX(0deg) scale(1.05);
		}
	}

	&:hover {
		box-shadow: 0 0 0 f.pxtorem(2) f.cssvar(color-primary-light),
			f.pxtorem(2) f.pxtorem(2) 0 0 f.cssvar(color-primary),
			f.pxtorem(3) f.pxtorem(3) f.pxtorem(3) f.pxtorem(2)
				f.cssvar(color-shadow-darker),
			inset 0 0 0 f.pxtorem(2) f.cssvar(color-shadow-lighter),
			inset 0 f.pxtorem(-10) f.pxtorem(16) f.pxtorem(6)
				rgba(0, 0, 0, 0.13),
			inset 0 f.pxtorem(9) f.pxtorem(32) f.pxtorem(4)
				rgba(255, 255, 255, 0.13);
	}

	&:focus {
		box-shadow: 0 0 0 f.pxtorem(2) f.cssvar(color-primary-light),
			f.pxtorem(2) f.pxtorem(2) 0 0 f.cssvar(color-primary),
			f.pxtorem(3) f.pxtorem(3) f.pxtorem(3) f.pxtorem(2)
				f.cssvar(color-shadow-darker),
			f.pxtorem(1) f.pxtorem(1) 0 f.pxtorem(8)
				f.cssvar(color-primary-light-opacity),
			inset 0 0 0 f.pxtorem(2) f.cssvar(color-shadow-lighter),
			inset 0 f.pxtorem(-10) f.pxtorem(16) f.pxtorem(6)
				rgba(0, 0, 0, 0.13),
			inset 0 f.pxtorem(9) f.pxtorem(32) f.pxtorem(4)
				rgba(255, 255, 255, 0.13);
	}

	&:active {
		background-position: 0 0;
		box-shadow: 0 0 0 f.pxtorem(2) f.cssvar(color-primary-dark),
			f.pxtorem(1) f.pxtorem(1) 0 f.pxtorem(1) f.cssvar(color-shadow),
			0 0 0 0 f.cssvar(color-shadow-darker),
			inset 0 0 0 f.pxtorem(2) f.cssvar(color-shadow-lighter),
			inset 0 f.pxtorem(-10) f.pxtorem(16) f.pxtorem(6)
				rgba(0, 0, 0, 0.13),
			inset 0 f.pxtorem(9) f.pxtorem(32) f.pxtorem(4)
				rgba(255, 255, 255, 0.13);
		padding: f.pxtorem(20) f.cssvar(spacing-sm);
		transform: skewX(0deg) translateX(#{f.pxtorem(3)})
			translateY(#{f.pxtorem(3)});

		span {
			transform: skewX(0deg) scale(1);
		}
	}

	@include pointer("fine") {
		padding: f.cssvar(spacing-sm) f.cssvar(spacing-md);

		&:hover,
		&:focus {
			padding: f.cssvar(spacing-sm)
				calc(#{f.cssvar(spacing-md)} + #{f.pxtorem(4)});
		}

		&:active {
			padding: f.cssvar(spacing-sm);
		}
	}

	span {
		transform: skewX(15deg);
		transition: all 0.3s ease-in-out 0s;
	}
}

@mixin buttonStyle2 {
	background: f.cssvar(color-bg);
	border: f.pxtorem(2) solid f.cssvar(color-primary);
	box-shadow: f.pxtorem(4) f.pxtorem(4) 0 0 f.cssvar(color-shadow);
	padding: f.cssvar(spacing-sm) f.pxtorem(20);

	@include pointer("fine") {
		padding: f.cssvar(spacing-xs) f.cssvar(spacing-sm);
	}

	&:hover,
	&:focus {
		color: f.cssvar(color-primary-light);
		border-color: f.cssvar(color-primary-light);
		box-shadow: f.pxtorem(7) f.pxtorem(7) 0 0 f.cssvar(color-shadow);
		transform: translateX(#{f.pxtorem(-3)}) translateY(#{f.pxtorem(-3)});
	}

	&:focus {
		text-decoration: underline;
	}

	&:active {
		border-color: f.cssvar(color-primary-dark);
		box-shadow: 0 0 0 0 f.cssvar(color-shadow);
		color: f.cssvar(color-primary-dark);
		text-decoration: none;
		transform: translateX(#{f.pxtorem(4)}) translateY(#{f.pxtorem(4)});
	}
}

@mixin buttonStyle3 {
	justify-content: center;
	background: linear-gradient(
			to bottom,
			f.cssvar(color-primary) 0 33.33%,
			f.cssvar(color-primary-light) 33.33% 66.66%,
			f.cssvar(color-primary-dark) 66.66% 100%
		)
		0 0 / 100% 300% no-repeat;
	border: f.pxtorem(2) solid f.cssvar(color-border-light);
	border-radius: 50%;
	box-shadow: 0 0 0 f.pxtorem(2) f.cssvar(color-primary),
		0 f.pxtorem(2) 0 f.pxtorem(2) f.cssvar(color-shadow),
		0 f.pxtorem(2) f.pxtorem(2) f.pxtorem(3) f.cssvar(color-shadow-light);

	&:hover,
	&:focus {
		background-position: 0 50%;
		box-shadow: 0 0 0 f.pxtorem(2) f.cssvar(color-primary-light),
			0 f.pxtorem(3) 0 f.pxtorem(2) f.cssvar(color-shadow),
			0 f.pxtorem(2) f.pxtorem(2) f.pxtorem(3)
				f.cssvar(color-shadow-light);
		transform: translateY(#{f.pxtorem(-1)});

		svg {
			animation: pulse 1.2s;
			animation-iteration-count: infinite;
		}
	}

	&:focus {
		box-shadow: 0 0 0 f.pxtorem(2) f.cssvar(color-primary-light),
			0 f.pxtorem(3) 0 f.pxtorem(2) f.cssvar(color-shadow),
			0 f.pxtorem(2) f.pxtorem(2) f.pxtorem(3)
				f.cssvar(color-shadow-light),
			0 f.pxtorem(1) 0 f.pxtorem(7) f.cssvar(color-primary-light-opacity);
	}

	&:active {
		background-position: 0 100%;
		box-shadow: 0 0 0 f.pxtorem(2) f.cssvar(color-primary),
			0 0 0 f.pxtorem(2) f.cssvar(color-shadow-darker),
			0 f.pxtorem(1) f.pxtorem(2) f.pxtorem(3)
				f.cssvar(color-shadow-light);
		transform: translateY(#{f.pxtorem(2)});

		svg {
			animation: unset;
		}
	}
}
