@use "../abstracts/functions" as fun;
@use "../abstracts/mixins" as mix;
@use "../abstracts/variables" as var;

.article {
	border-bottom: fun.convert-px(1) solid fun.get-var(color-border-light);
	margin-bottom: fun.get-var(margin-md);
	padding-bottom: fun.get-var(margin-xl);

	&__meta {
		margin-bottom: fun.get-var(margin-md);
	}

	&__figure {
		margin: 0 auto fun.get-var(margin-md);
		text-align: center;
	}

	&__image {
		box-shadow: 0 0 fun.convert-px(1) 0 fun.get-var(color-shadow-light),
			fun.convert-px(4) fun.convert-px(4) fun.convert-px(4) 0
				fun.get-var(color-shadow-light);
		max-height: fun.convert-px(150);
		width: auto;
		transition: all 0.3s ease-in-out 0s;
	}

	@include mix.media("screen") {
		@include mix.dimensions("sm") {
			&__body {
				display: flex;
				flex-flow: row wrap;
			}

			&__figure {
				order: 2;
				margin-top: fun.get-var(margin-xs);
				margin-left: fun.get-var(margin-md);
			}

			&__image {
				max-width: fun.convert-px(250);
			}

			&__description {
				flex: 1 1
					calc(#{fun.convert-px(250)} - #{fun.get-var(margin-md)}); // image-width - margin
				order: 1;
			}
		}

		@include mix.dimensions("xl") {
			&__figure {
				margin-left: fun.get-var(margin-xl);
			}
		}
	}
}

.page--is-thematic {
	.article {
		display: grid;
		grid-template-columns: minmax(0, 1fr);

		&__footer {
			grid-row: 2;
		}

		@include mix.media("screen") {
			@include mix.dimensions("sm") {
				grid-template-columns: 1fr fun.convert-px(200);
				grid-template-rows: max-content 1fr;

				&__header {
					grid-column: 1;
					grid-row: 1;
				}

				&__body {
					grid-column: 1;
					grid-row: 2;
				}

				&__footer {
					grid-column: 2;
					grid-row: 1 / -1;
					margin-bottom: 0;
				}

				&__figure {
					margin: 0 0 fun.get-var(margin-md);
					text-align: left;
				}

				&__image {
					max-width: fun.convert-px(200);
					max-height: fun.convert-px(100);
					margin: 0 auto;
				}

				.meta {
					&__item--themes {
						.meta__description {
							display: block;
							padding-left: calc(
								#{var.get-dim("icon-size-sm")} + #{fun.get-var(
										padding-2xs
									)}
							); // icon size + padding

							&:not(:first-child) {
								&::before {
									display: none;
								}
							}
						}
					}
				}
			}

			@include mix.dimensions("lg") {
				column-gap: fun.get-var(margin-2xl);
				margin-bottom: fun.get-var(margin-lg);

				&:last-child {
					border-bottom: none;
					padding-bottom: 0;
				}
			}
		}
	}
}
