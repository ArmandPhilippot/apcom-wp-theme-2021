@use "../abstracts/functions" as fun;
@use "../abstracts/variables" as var;

.form {
	&__item {
		&--none {
			display: none;
		}
	}

	&__label {
		display: block;
		cursor: pointer;
		color: fun.get-var(color-fg-secondary);
		font-size: fun.get-var(font-size-sm);
		text-transform: uppercase;
		margin-bottom: fun.convert-px(2);
	}

	&__field {
		&--textarea {
			min-height: fun.convert-px(200);
		}
	}

	.btn {
		margin: auto;
	}

	.required {
		color: fun.get-var(color-secondary);
	}
}

.form--search {
	position: relative;

	.btn {
		margin: fun.get-var(spacing-md) auto 0;

		&__icon {
			fill: fun.get-var(color-fg-inverted);
			margin-left: fun.get-var(spacing-sm);
			width: var.get-dim("icon-size-md");
			transition: all 0.3s ease-in 0s;
		}
	}
}

.form--comments {
	.form__submit {
		margin-bottom: 0;
	}
}

input[type="text"],
input[type="email"],
input[type="url"],
input[type="password"],
input[type="search"],
input[type="number"],
input[type="tel"],
input[type="range"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="color"],
textarea {
	background: fun.get-var(color-bg-tertiary);
	border: fun.convert-px(1) solid fun.get-var(color-border);
	box-shadow: fun.convert-px(4) fun.convert-px(4) 0 0
		fun.get-var(color-shadow);
	color: fun.get-var(color-fg);
	padding: fun.get-var(spacing-sm);
	width: 100%;
	transition: all 0.2s ease-in 0s;

	&:hover {
		box-shadow: fun.convert-px(7) fun.convert-px(7) 0 0
			fun.get-var(color-shadow);
		transform: translateX(#{fun.convert-px(-3)})
			translateY(#{fun.convert-px(-3)});
	}

	&:focus {
		background: fun.get-var(color-bg);
		box-shadow: fun.convert-px(2) fun.convert-px(2) 0 0
			fun.get-var(color-primary-light);
		outline: none;
		transform: translateX(#{fun.convert-px(2)})
			translateY(#{fun.convert-px(2)});
	}

	&::placeholder {
		color: fun.get-var(color-fg-tertiary);
	}
}

input[type="checkbox"]:not(.toggle) {
	position: absolute;
	left: 0;
	opacity: 0.01;

	+ label {
		position: relative;
		padding-left: calc(
			#{fun.convert-px(20)} + #{fun.get-var(spacing-sm)}
		); // before width + padding
		cursor: pointer;

		&::before {
			content: "";
			position: absolute;
			top: fun.convert-px(-2);
			left: 0;
			width: fun.convert-px(20);
			height: fun.convert-px(20);
			background: fun.get-var(color-bg-tertiary);
			border-radius: fun.convert-px(3);
			border: fun.convert-px(1) solid fun.get-var(color-border);
			box-shadow: fun.convert-px(2) fun.convert-px(2) 0 0
				fun.get-var(color-shadow);
			transition: all 0.3s ease-in-out 0s;
		}

		&::after {
			content: "\2715";
			speak: never;
			position: absolute;
			top: fun.convert-px(8);
			left: fun.convert-px(2);
			color: fun.get-var(color-primary);
			font-size: fun.get-var(font-size-lg);
			line-height: 0;
			transition: all 0.3s ease-in-out 0s;
		}
	}

	&:hover {
		+ label {
			&::before {
				box-shadow: fun.convert-px(4) fun.convert-px(4) 0 0
					fun.get-var(color-shadow);
				transform: translateX(#{fun.convert-px(-2)})
					translateY(#{fun.convert-px(-2)});
			}
		}
	}

	&:focus {
		+ label {
			&::before {
				background: fun.get-var(color-bg);
				box-shadow: 0 0 0 fun.convert-px(4)
						fun.get-var(color-primary-light-opacity),
					fun.convert-px(1) fun.convert-px(1) 0 0
						fun.get-var(color-shadow);
				transform: translateX(#{fun.convert-px(1)})
					translateY(#{fun.convert-px(1)});
			}
		}
	}

	&:not(:checked) {
		+ label {
			&::after {
				opacity: 0;
				transform: scale(0);
			}
		}
	}

	&:checked {
		+ label {
			&::after {
				opacity: 1;
				transform: scale(1);
			}
		}

		&:focus {
			+ label {
				&::after {
					top: fun.convert-px(9);
					left: fun.convert-px(3);
				}
			}
		}

		&:hover:not(:focus) {
			+ label {
				&::after {
					top: fun.convert-px(6);
					left: fun.convert-px(-1);
				}
			}
		}
	}
}

select {
	appearance: none;
	background-color: fun.get-var(color-bg-tertiary);
	background-image: url(fun.encode-svg(
		'<svg viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg"><path fill="#{var.$color_chathams-blue-dark}" d="M3.707 7 3 7.707l6.125 6.125L11 15.707l1.875-1.875L19 7.707 18.293 7l-6.125 6.125L11 14.293l-1.168-1.168L3.707 7"/></svg>'
	));
	background-position: calc(100% - #{fun.get-var(spacing-sm)}) center;
	background-repeat: no-repeat;
	background-size: fun.convert-px(24);
	border: fun.convert-px(1) solid fun.get-var(color-border);
	box-shadow: fun.convert-px(4) fun.convert-px(4) 0 0
		fun.get-var(color-shadow);
	color: fun.get-var(color-fg);
	cursor: pointer;
	padding: fun.get-var(spacing-sm);
	width: 100%;
	transition: all 0.3s ease-in-out 0s;

	&:hover {
		box-shadow: fun.convert-px(6) fun.convert-px(6) 0 0
			fun.get-var(color-shadow);
		transform: translateX(#{fun.convert-px(-2)})
			translateY(#{fun.convert-px(-2)});
	}

	&:focus {
		background-color: fun.get-var(color-bg);
		box-shadow: fun.convert-px(1) fun.convert-px(1) 0 fun.convert-px(5)
				fun.get-var(color-primary-light-opacity),
			fun.convert-px(2) fun.convert-px(2) 0 0 fun.get-var(color-shadow);
		outline: none;
		transform: translateX(#{fun.convert-px(2)})
			translateY(#{fun.convert-px(2)});
	}

	option {
		&:hover {
			background: fun.get-var(color-bg-secondary);
		}
	}
}
